// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TestEndpointEndpointGroup test endpoint endpoint group
//
// swagger:model test.endpoint.EndpointGroup
type TestEndpointEndpointGroup struct {

	// UUID.
	ID string `json:"id,omitempty"`

	// The location of the physical or virtual port that will be connected to this abstract port.
	//          The value pattern must be chassis/card/port where chassis is an ipv4/ipv6 address and card/port are unsigned byte 1-255.
	//          The separator between the chassis/card/port values must be a forward slash.
	Location string `json:"location,omitempty"`

	// Name of the endpoint
	Name string `json:"name,omitempty"`

	// This field captures UI related metadata as an decoded string.
	//          Backend echos back the values as is.
	UIDescriptor string `json:"ui-descriptor,omitempty"`
}

// Validate validates this test endpoint endpoint group
func (m *TestEndpointEndpointGroup) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this test endpoint endpoint group based on context it is used
func (m *TestEndpointEndpointGroup) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TestEndpointEndpointGroup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TestEndpointEndpointGroup) UnmarshalBinary(b []byte) error {
	var res TestEndpointEndpointGroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
